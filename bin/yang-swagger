#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const argv = require('minimist')(process.argv.slice(2), {
  boolean: [ 'help' ],
  alias: {
    help: 'h',
	config: 'c',
	format: 'f',
    output: 'o'
  },
  string: [ 'config', 'format', 'output' ]
});

if (argv.h === true) {
  let help;
  help  = "  Usage: yang-swagger [options] modules...\n\n";
  help += "  Options:\n";
  help += "    -c, --config <filename>  Use <filename> to retrieve configuration data (default: uses 'config' directory)\n";
  help += "    -f, --format <string>    Convert to YAML or JSON (default: json)\n";
  help += "    -o, --output <filename>  Write to <filename> if specified, otherwise to console\n";
  console.info(help);
  process.exit();
}

let config = require('config');
if (argv.config) {
  config = config.util.parseFile(path.resolve(argv.config));
}
const swagger = require('..').eval(config)

swagger.in('transform').do({modules: argv._})
  .then(res => res.spec.serialize(argv))
  .then(res => {
    if (argv.output) {
      fs.writeFileSync(argv.output, res.data, 'utf-8');
    } else {
      console.log(res.data);
    }
    return res;
  })
  .catch(err => console.error(err));
